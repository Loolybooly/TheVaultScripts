--== SETTINGS ==--
local Settings = {
    Highlight = {
        Enabled = true,
        Teamcheck = false,
        Transparency = 0.7,
        IgnoreDead = true,
        EnemyColor = Color3.fromRGB(255, 0, 0),
        EnemyColorRainbow = true,
        TeamColor = Color3.fromRGB(0, 255, 0),
        TeamColorRainbow = false,
    },

    Aimbot = {
        Enabled = true,
        Radius = 200,
        TargetPart = "Head",
        VisibleCheck = true,
        TimeToTarget = 0.3,
        Teamcheck = true,
        Color = Color3.fromRGB(225, 106, 255),
        Rainbow = true,
    }
}

--== SERVICES & VARIABLES ==--
repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = Workspace.CurrentCamera
local GuiInset = GuiService:GetGuiInset()

local WorldToScreen = Camera.WorldToScreenPoint

local con = LocalPlayer.OnTeleport:Connect(function(state)
    queue_on_teleport(game:HttpGet("https://raw.githubusercontent.com/AshtonsAlt/Roblox/refs/heads/main/Games/Rivials.lua"))
    con:Disconnect()
    table.remove(Internals.Connections, con)
end)
table.insert(Internals.Connections, con)

--== KEYBIND GUI ==--
local CoreGui = game:GetService("CoreGui")

for _, child in ipairs(CoreGui:GetChildren()) do
    if child.Name == "KeybindHelpGui" or child.Name == "StatusGui" then
        child:Destroy()
    end
end
local KeybindGui = Instance.new("ScreenGui")
local KeybindFrame = Instance.new("Frame")
local KeybindTitle = Instance.new("TextLabel")
local KeybindCloseButton = Instance.new("TextButton")
local KeybindsLabel = Instance.new("TextLabel")

--== STATUS GUI ==--
local oldStatus = CoreGui:FindFirstChild("StatusGui")
if oldStatus then oldStatus:Destroy() end

local StatusGui = Instance.new("ScreenGui")
local StatusLabel = Instance.new("TextLabel")

local customWalkSpeed = 50
local customJumpPower = 100

local wsMonitor, jpMonitor

--== INTERNAL STATE ==--
local Internals = {
    Connections = {},
    HiddenGui = gethui(),
    Highlights = {},
    Drawings = {},
    Aimbot = {
        On = false,
        ElapsedTime = 0,
        Target = nil,
    }
}

--== UTILITIES ==--
local function IsTeammate(player)
    return player.Character
        and player.Character:FindFirstChild("HumanoidRootPart")
        and player.Character.HumanoidRootPart:FindFirstChild("TeammateLabel") ~= nil
end

local function IsVisible(player)
    local origin = Camera.CFrame.Position
    local target = player.Character[Settings.Aimbot.TargetPart].Position

    local rayParams = RaycastParams.new()
    rayParams.FilterType = Enum.RaycastFilterType.Exclude
    rayParams.FilterDescendantsInstances = {player.Character, LocalPlayer.Character}

    return not Workspace:Raycast(origin, (target - origin), rayParams)
end

local function FindClosestPlayer()
    local closest, minDist

    for _, player in pairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end

        local char = player.Character
        local part = char and char:FindFirstChild(Settings.Aimbot.TargetPart)
        local hum = char and char:FindFirstChildOfClass("Humanoid")
        if not (part and hum and hum.Health > 0) then
            continue
        end

        local screenPos = WorldToScreen(Camera, part.Position)
        if screenPos.Z < 0 then
            continue
        end

		local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        local dist = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
        if dist > Settings.Aimbot.Radius then
            continue
        end

        if not closest or dist < minDist then
            closest, minDist = player, dist
        end
    end

    return closest
end

local function CreateHPBillboard(player)
	local billboard = Instance.new("BillboardGui")
	billboard.Name = "HPBillboard"
	billboard.Size = UDim2.new(0, 100, 0, 20)
	billboard.AlwaysOnTop = true
	billboard.LightInfluence = 0
	billboard.StudsOffset = Vector3.new(0, 3.5, 0)

	local label = Instance.new("TextLabel")
	label.Name = "HPText"
	label.Parent = billboard
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromRGB(0, 255, 0)
	label.Font = Enum.Font.SourceSansBold
	label.TextScaled = true
	label.Text = ""

	billboard.Parent = Internals.HiddenGui
	return billboard
end

--== HIGHLIGHT SYSTEM ==--
local function AddPlayerHighlight(player)
    local highlight = Instance.new("Highlight")
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = Internals.HiddenGui

    local isTeammate = IsTeammate(player)
    highlight.FillTransparency = isTeammate and Settings.Highlight.Teamcheck and 1 or Settings.Highlight.Transparency
    highlight.OutlineTransparency = isTeammate and Settings.Highlight.Teamcheck and 1 or 0
    highlight.FillColor = isTeammate and Settings.Highlight.TeamColor or Settings.Highlight.EnemyColor
    highlight.OutlineColor = highlight.FillColor

    Internals.Highlights[player.Name] = highlight
    if player.Character then highlight.Adornee = player.Character end

    table.insert(Internals.Connections, player.CharacterAdded:Connect(function(char)
        highlight.Adornee = char
    end))

    --== HP Billboard ==--
    local hpGui = CreateHPBillboard(player)
    Internals.Drawings[player.Name .. "_HP"] = hpGui

    if player.Character then
        local head = player.Character:FindFirstChild("Head")
        if head then
            hpGui.Adornee = head
        end
    end

    table.insert(Internals.Connections, player.CharacterAdded:Connect(function(char)
        task.wait(1)
        local head = char:FindFirstChild("Head")
        if head then
            hpGui.Adornee = head
        end
    end))
end

local function RemovePlayerHighlight(player)
    local hl = Internals.Highlights[player.Name]
    if hl then
        hl:Destroy()
        Internals.Highlights[player.Name] = nil
    end
end

local function UpdatePlayerHighlight(player)
    local hl = Internals.Highlights[player.Name]
    if not hl then return end

    local isTeammate = IsTeammate(player)
    local color = (isTeammate and Settings.Highlight.TeamColor) or Settings.Highlight.EnemyColor
    if (isTeammate and Settings.Highlight.TeamColorRainbow) or (not isTeammate and Settings.Highlight.EnemyColorRainbow) then
        color = Color3.fromHSV((os.clock() / 5) % 1, 1, 1)
    end

    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health <= 0 and Settings.Highlight.IgnoreDead then
        hl.FillTransparency, hl.OutlineTransparency = 1, 1
        return
    elseif humanoid and humanoid.Health <= 0 then
        color = Color3.new(0, 0, 0)
    end

    hl.FillTransparency = isTeammate and Settings.Highlight.Teamcheck and 1 or Settings.Highlight.Transparency
    hl.OutlineTransparency = isTeammate and Settings.Highlight.Teamcheck and 1 or 0
    hl.FillColor, hl.OutlineColor = color, color
end

local function updateHumanoidStats()
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if wsMonitor then wsMonitor:Disconnect() end
            if jpMonitor then jpMonitor:Disconnect() end

            humanoid.WalkSpeed = customWalkSpeed
            humanoid.JumpPower = customJumpPower

            wsMonitor = humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
                if humanoid.WalkSpeed ~= customWalkSpeed then
                    humanoid.WalkSpeed = customWalkSpeed
                end
            end)

            jpMonitor = humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
                if humanoid.JumpPower ~= customJumpPower then
                    humanoid.JumpPower = customJumpPower
                end
            end)
        end
    end
end

--== AIMBOT TOGGLE KEYBIND ==--
table.insert(Internals.Connections, UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end

    if input.KeyCode == Enum.KeyCode.U then
        Internals.Aimbot.On = not Internals.Aimbot.On
        Internals.Aimbot.ElapsedTime = 0
        Internals.Aimbot.Target = nil

    elseif input.KeyCode == Enum.KeyCode.Z then
        local target = FindClosestPlayer()
        if target
            and target.Character
            and target.Character:FindFirstChild("HumanoidRootPart")
            and LocalPlayer.Character
            and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then

            local targetHRP = target.Character.HumanoidRootPart
            local myHRP = LocalPlayer.Character.HumanoidRootPart
            local offset = targetHRP.CFrame.LookVector * -3

            myHRP.CFrame = CFrame.new(targetHRP.Position + offset, targetHRP.Position)
        end

    elseif input.KeyCode == Enum.KeyCode.E then
        Settings.Highlight.Enabled = not Settings.Highlight.Enabled

        if Settings.Highlight.Enabled then
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    AddPlayerHighlight(player)
                end
            end
        else
            for _, player in ipairs(Players:GetPlayers()) do
                RemovePlayerHighlight(player)
            end
        end

    elseif input.KeyCode == Enum.KeyCode.J then
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
    end
end))

--== HIGHLIGHT INITIALIZATION ==--
if Settings.Highlight.Enabled then
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then AddPlayerHighlight(player) end
    end
    table.insert(Internals.Connections, Players.PlayerAdded:Connect(AddPlayerHighlight))
    table.insert(Internals.Connections, Players.PlayerRemoving:Connect(RemovePlayerHighlight))
end

--== MAIN LOOP ==--
table.insert(Internals.Connections, RunService.RenderStepped:Connect(function(dt)
    -- Update highlights
    for name, hl in pairs(Internals.Highlights) do
        local player = Players:FindFirstChild(name)
        if player then
            UpdatePlayerHighlight(player)

            -- Update HP text above enemy
            local hpGui = Internals.Drawings[name .. "_HP"]
            if hpGui and player.Character then
                local hum = player.Character:FindFirstChildOfClass("Humanoid")
                if hum and hum.Health > 0 then
                    hpGui.HPText.Text = string.format("HP: %.0f", hum.Health)
                    hpGui.Enabled = true
                else
                    hpGui.Enabled = false
                end
            end
        end
    end

    -- Aimbot logic
    if Settings.Aimbot.Enabled and Internals.Aimbot.On then
        local alpha = math.clamp(Internals.Aimbot.ElapsedTime / Settings.Aimbot.TimeToTarget, 0, 1)
        local target = Internals.Aimbot.Target

        if not (target and target.Character and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0) then
            target = FindClosestPlayer()
        end

        if target then
            Internals.Aimbot.Target = target
            Internals.Aimbot.ElapsedTime += dt

            local part = target.Character[Settings.Aimbot.TargetPart]
            local screenPos = WorldToScreen(Camera, part.Position)

            if not Settings.Aimbot.VisibleCheck or IsVisible(target) then
                local delta = Vector2.new(screenPos.X - Mouse.X, screenPos.Y - Mouse.Y)
                mousemoverel(delta.X * alpha, delta.Y * alpha)
            end
        else
            Internals.Aimbot.ElapsedTime = 0
        end
    end

    -- Update status label every frame
    StatusLabel.Text = string.format(
        "[Aimbot: %s] [ESP: %s] [Boost: %s]",
        Internals.Aimbot.On and "ON" or "OFF",
        Settings.Highlight.Enabled and "ON" or "OFF",
        Internals.MovementBoost and "ON" or "OFF"
    )
end))

KeybindGui.Name = "KeybindHelpGui"
KeybindGui.ResetOnSpawn = false
KeybindGui.Enabled = false
KeybindGui.Parent = game:GetService("CoreGui")

KeybindFrame.Parent = KeybindGui
KeybindFrame.Size = UDim2.new(0, 300, 0, 180)
KeybindFrame.Position = UDim2.new(0.5, -150, 0.5, -90)
KeybindFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
KeybindFrame.BorderSizePixel = 0
KeybindFrame.Active = true
KeybindFrame.Draggable = true

KeybindTitle.Name = "Title"
KeybindTitle.Parent = KeybindFrame
KeybindTitle.Size = UDim2.new(1, 0, 0, 30)
KeybindTitle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
KeybindTitle.BorderSizePixel = 0
KeybindTitle.Text = "Keybind Help"
KeybindTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
KeybindTitle.Font = Enum.Font.GothamBold
KeybindTitle.TextSize = 18

KeybindCloseButton.Name = "Close"
KeybindCloseButton.Parent = KeybindFrame
KeybindCloseButton.Size = UDim2.new(0, 60, 0, 25)
KeybindCloseButton.Position = UDim2.new(1, -65, 0, 2)
KeybindCloseButton.BackgroundColor3 = Color3.fromRGB(50, 0, 0)
KeybindCloseButton.BorderSizePixel = 0
KeybindCloseButton.Text = "Close"
KeybindCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
KeybindCloseButton.Font = Enum.Font.GothamBold
KeybindCloseButton.TextSize = 14

KeybindsLabel.Name = "Keybinds"
KeybindsLabel.Parent = KeybindFrame
KeybindsLabel.Size = UDim2.new(1, -10, 1, -40)
KeybindsLabel.Position = UDim2.new(0, 5, 0, 35)
KeybindsLabel.BackgroundTransparency = 1
KeybindsLabel.TextXAlignment = Enum.TextXAlignment.Left
KeybindsLabel.TextYAlignment = Enum.TextYAlignment.Top
KeybindsLabel.TextWrapped = true
KeybindsLabel.Font = Enum.Font.Code
KeybindsLabel.TextSize = 14
KeybindsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
KeybindsLabel.Text = [[
[U] - Toggle Aimbot
[Z] - Teleport behind closest enemy
[E] - Toggle the ESP on and off
[T] - Toggle Speed/Jump boost
[J] - Rejoin the game
[X] - Show/Hide the stats GUI
[H] - Show/Hide this keybind GUI
]]

StatusGui.Name = "StatusGui"
StatusGui.ResetOnSpawn = false
StatusGui.Parent = game:GetService("CoreGui")

StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = StatusGui
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, 230, 0, -38)
StatusLabel.Size = UDim2.new(0, 400, 0, 20)
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
StatusLabel.Font = Enum.Font.Code
StatusLabel.TextSize = 16
StatusLabel.Text = "[Aimbot: OFF] [ESP: OFF] [Boost: OFF]"

KeybindCloseButton.MouseButton1Click:Connect(function()
    KeybindGui.Enabled = false
end)

UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end

    if input.KeyCode == Enum.KeyCode.H then
        KeybindGui.Enabled = not KeybindGui.Enabled

    elseif input.KeyCode == Enum.KeyCode.T then
        Internals.MovementBoost = not Internals.MovementBoost

        if Internals.MovementBoost then
            updateHumanoidStats()
        else
            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")

            if humanoid then
                if wsMonitor then wsMonitor:Disconnect() end
                if jpMonitor then jpMonitor:Disconnect() end

                humanoid.WalkSpeed = 16
                humanoid.JumpPower = 20
            end
        end

    elseif input.KeyCode == Enum.KeyCode.X then
        StatusGui.Enabled = not StatusGui.Enabled
    end
end)

StatusGui.Enabled = true
KeybindGui.Enabled = true
print("Script Loaded")
